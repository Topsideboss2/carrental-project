# build stage
# Choose the image which has node installed already
FROM node:18-alpine as build-stage

# Make the 'app' folder the current working directory
WORKDIR /app

# copy both 'package.json' and 'package-lock.json' (if available)
COPY package*.json ./

# install project dependencies
RUN npm install

# copy project files and folders to the current working directory (i.e. 'app' folder)
COPY ./carrental .

# build app for production with minification
RUN npx nx build web

# production stage
# Choose the nginx image 
FROM nginx:stable-alpine as production-stage

# Copy the necessary folder "/app/dist" to the nginx/html dir
COPY --from=build-stage /app/dist/apps/web /usr/share/nginx/html

COPY ./carrental/default.conf /etc/nginx/conf.d/default.conf

# specifies that the container will listen on port 80
EXPOSE 80

# specifies the command to run when the Docker image is started 
CMD ["nginx", "-g", "daemon off;"]